これはプログラムの説明文です。


■タイヤのプログラム -----------------------------------------------------------

== ↓ここから↓ ========================
extends MeshInstance3D

func _process(時間):

	# Xじくで、毎秒180度、回る
	# 速さ × 時間 = きょり
	rotation_degrees.x += 180 * 時間

== ↑ここまで↑ ========================


■ロボのプログラム -----------------------------------------------------------

== ↓ここから↓ ========================
extends Node3D

func _process(時間):

	# キーボードの左がおされていたら、毎秒マイナス180度だけ回る
	if Input.is_key_pressed(KEY_LEFT) == true:
		rotation_degrees.y -= 180 * 時間

	# キーボードの右がおされていたら、毎秒プラス180度だけ回る
	if Input.is_key_pressed(KEY_RIGHT) == true:
		rotation_degrees.y += 180 * 時間

	# 向いている方向に、毎秒2メートルだけ進む
	# sin（サイン）とcos（コサイン）の組み合わせで、方向をXとYにする
	position.x += 2.0 * sin(rotation.y) * 時間
	position.z += 2.0 * cos(rotation.y) * 時間

	# XとZを、マイナス3以上、プラス3以下にする
	position.x = clampf(position.x, -3, 3)
	position.z = clampf(position.z, -3, 3)

== ↑ここまで↑ ========================


■カメラのプログラム -----------------------------------------------------------

== ↓ここから↓ ========================
extends Camera3D

func _process(_時間):
	look_at($"../ロボ".position)

== ↑ここまで↑ ========================


■おにぎりのプログラム -----------------------------------------------------------

== ↓ここから↓ ========================
extends Node3D

var ゲット済み = false

func _process(_時間):
	if ゲット済み == false:

		var おにX = position.x
		var おにZ = position.z
		var ロボX = $"../ロボ".position.x
		var ロボZ = $"../ロボ".position.z

		# おにぎりのXとZが、ロボのXとZから、0.4だけ、はなれているかどうか？
		if (
				(ロボX - 0.4) < おにX
				and
				おにX < (ロボX + 0.4)
				and
				(ロボZ - 0.4) < おにZ
				and
				おにZ < (ロボZ + 0.4)
				):
			reparent($"../ロボ")
			ゲット済み = true

== ↑ここまで↑ ========================


■星のプログラム -----------------------------------------------------------
extends Node3D

var 進むX = 0.0
var 進むY = 0.0
var 進むZ = 0.0
var 進み始めた = false

func _process(時間):

	if 進み始めた == false:
		# ロボには始めから、どう体などの4つのノードが付いているので、
		# くっついてるノードの数から4を引くと、取ったおにぎりの数になる
		var おにぎりの数 = $"../ロボ".get_child_count() - 4
		if おにぎりの数 == 5:
			position.y = 1.0
			進むX = randf_range(-1.0, 1.0)
			進むY = randf_range(-1.0, 1.0)
			進むZ = randf_range(-1.0, 1.0)
			進み始めた = true

	position.x += 進むX * 時間
	position.y += 進むY * 時間
	position.z += 進むZ * 時間
	rotation_degrees.y += 360.0 * 時間

== ↑ここまで↑ ========================







